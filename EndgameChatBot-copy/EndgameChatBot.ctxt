#BlueJ class context
comment0.target=EndgameChatBot
comment0.text=\r\n\ A\ program\ to\ carry\ on\ conversations\ with\ a\ human\ user.\r\n\ This\ is\ the\ initial\ version\ that\:\ \ \r\n\ <ul><li>\r\n\ \ \ \ \ \ \ Uses\ indexOf\ to\ find\ strings\r\n\ </li><li>\r\n\ \ \ \ \ \ \ \ \ \ Handles\ responding\ to\ simple\ words\ and\ phrases\ \r\n\ </li></ul>\r\n\ This\ version\ uses\ a\ nested\ if\ to\ handle\ default\ responses.\r\n\ @author\ Laurie\ White\r\n\ @version\ April\ 2012\r\n
comment1.params=
comment1.target=java.lang.String\ getGreeting()
comment1.text=\r\n\ Get\ a\ default\ greeting\ \ \ \r\n\ @return\ a\ greeting\r\n
comment2.params=statement
comment2.target=java.lang.String\ NameGame(java.lang.String)
comment2.text=public\ static\ void\ main(String\ args[]){\ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ ArrayList<String>\ endNames\=new\ ArrayList<String>();\ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Iron\ Man");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Captain\ America");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Thor");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Hawkeye");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Hulk");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Falcon");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("War\ Machine");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Scarlet\ Witch");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Ant\ Man");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Wasp");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Spider\ Man");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Star\ Lord");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Nebula");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Gamora");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Drax");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Rocket");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Groot");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Mantis");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Doctor\ Strange");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Wong");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Black\ Panther");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Okoye");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Bucky");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Valkrine");\r\n\ \ \ \ \ \ \ \ \ \ \ \ endNames.add("Captain\ Marvel");\r\n}
comment3.params=statement
comment3.target=java.lang.String\ getResponse(java.lang.String)
comment3.text=\r\n\ Gives\ a\ response\ to\ a\ user\ statement\r\n\ \r\n\ @param\ statement\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ user\ statement\r\n\ @return\ a\ response\ based\ on\ the\ rules\ given\r\n
comment4.params=statement\ goal\ startPos
comment4.target=int\ findKeyword(java.lang.String,\ java.lang.String,\ int)
comment5.params=statement\ goal
comment5.target=int\ findKeyword(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Search\ for\ one\ word\ in\ phrase.\ The\ search\ is\ not\ case\r\n\ sensitive.\ This\ method\ will\ check\ that\ the\ given\ goal\r\n\ is\ not\ a\ substring\ of\ a\ longer\ string\ (so,\ for\r\n\ example,\ "I\ know"\ does\ not\ contain\ "no").\ The\ search\r\n\ begins\ at\ the\ beginning\ of\ the\ string.\r\n\ \r\n\ @param\ statement\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ string\ to\ search\r\n\ @param\ goal\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ string\ to\ search\ for\r\n\ @return\ the\ index\ of\ the\ first\ occurrence\ of\ goal\ in\r\n\ \ \ \ \ \ \ \ \ statement\ or\ -1\ if\ it's\ not\ found\r\n
comment6.params=
comment6.target=java.lang.String\ getRandomResponse()
comment6.text=\r\n\ Pick\ a\ default\ response\ to\ use\ if\ nothing\ else\ fits.\r\n\ @return\ a\ non-committal\ string\r\n
numComments=7
